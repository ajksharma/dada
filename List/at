    let object = Type

in  let cat = ./../../dhall-bhat/Category/Monoidal/Set/cartesian

in  let Day = ./../../dhall-bhat/Day/Type object cat cat

in  let XNor = ./../XNor/Type

in    λ(a : Type)
    → ./../zoo/cata2
      Natural
      Optional
      ./../Natural/recursive
      (List a)
      (XNor a)
      (./steppable a)
      (Optional a)
      (   λ(day : Day Optional (XNor a) (Optional a))
        → day
          (Optional a)
          (   λ(x : { _1 : Type, _2 : Type })
            → λ(f : { _1 : x._1, _2 : x._2 } → Optional a)
            → λ(p : { _1 : Optional x._1, _2 : XNor a x._2 })
            → merge
              { Neither =
                  λ(_ : {}) → None a
              , Both =
                    λ(b : { head : a, tail : x._2 })
                  → Optional/fold
                    x._1
                    p._1
                    (Optional a)
                    (λ(meh : x._1) → f { _1 = meh, _2 = b.tail })
                    (Some b.head)
              }
              p._2
          )
      )
