    let Eq = ./../../caterwaul/Eq/Type

in  let XNor = ./Type

in    λ(a : Type)
    → λ(ea : Eq a)
    → λ(b : Type)
    → λ(eb : Eq b)
    →   { eq =
              λ(x : XNor { _1 = a, _2 = b })
            → λ(y : XNor { _1 = a, _2 = b })
            → merge
              { Both =
                    λ(xx : { head : a, tail : b })
                  → merge
                    { Both =
                          λ(yy : { head : a, tail : b })
                        → ea.eq xx.head yy.head && eb.eq xx.tail yy.tail
                    , Neither =
                        λ(q : {}) → False
                    }
                    y
              , Neither =
                    λ(q : {})
                  → merge
                    { Both =
                        λ(yy : { head : a, tail : b }) → False
                    , Neither =
                        λ(q : {}) → True
                    }
                    y
              }
              x
        }
      : Eq (XNor { _1 = a, _2 = b })
