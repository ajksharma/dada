    let Functor = ./../dhall-bhat/Functor/Endo/Type

in    λ(object : Kind)
    → λ(arrow : object → object → Type)
    → λ(t : object)
    → λ(base : object → object)
    → λ(cata : ∀(a : object) → arrow (base a) a → arrow t a)
    → λ(embed : arrow (base t) t)
    → λ(functor : Functor object arrow base)
    → cata (base t) (functor.map (base t) t embed)
