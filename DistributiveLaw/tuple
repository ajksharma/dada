    let Functor = ./../../dhall-bhat/Functor/Endo/Set

in  let Tuple = ./../../dhall-bhat/Tuple/Type

in    λ(f : Type → Type)
    → λ(functor : Functor f)
    → λ(a : Type)
    → λ(algebra : f a → a)
    →   (   λ(b : Type)
          → λ(fwa : f (Tuple a b))
          → { _1 =
                algebra
                (functor.map (Tuple a b) a (λ(x : Tuple a b) → x._1) fwa)
            , _2 =
                functor.map (Tuple a b) b (λ(x : Tuple a b) → x._2) fwa
            }
        )
      : ./Type Type ./../../dhall-bhat/Function/Type f (Tuple a)
