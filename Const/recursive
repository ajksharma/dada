    let kArrow = ./../../caterwaul/Function/Kind

in  let kProduct = ./../../caterwaul/Tuple/Kind

in    λ(object : Kind)
    → λ(arrow : kArrow (kProduct object object) Type)
    →     let Const = ./../../caterwaul/Const/Type
      
      in    λ(t : object)
          →   { cata = λ(a : object) → λ(f : arrow { _1 = t, _2 = a }) → f }
            : ./../Recursive/Type object arrow t (Const object object t)
