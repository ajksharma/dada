let kArrow =
      https://raw.githubusercontent.com/sellout/caterwaul/master/Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

in  let kProduct =
          https://raw.githubusercontent.com/sellout/caterwaul/master/Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8
    
    in    λ ( object
            : Kind
            )
        → λ(arrow : kArrow (kProduct object object) Type)
        → let Set =
                https://raw.githubusercontent.com/sellout/caterwaul/master/Function/Type sha256:44d58123a7ba6bd4f59a8f0fe8363ca585db3061ae3f369d3a26607a127f7927
          
          in  let Set/category =
                    https://raw.githubusercontent.com/sellout/caterwaul/master/Function/category sha256:de245a327ab65ee050d8adfe6271621e83ceced0333a799c37bef940a119696f
              
              in  let Functor =
                        https://raw.githubusercontent.com/sellout/caterwaul/master/Functor/Type sha256:fe94261bd581198ae1523ffbe7037159ad8327199b42ee3f97d16a7e1fa1dc79
                        object
                        Type
                        arrow
                        Set
                  
                  in    λ ( f
                          : kArrow (kProduct object Type) Type
                          )
                      → λ ( functor
                          :   ∀(x : Type)
                            → Functor (λ(a : object) → f { _1 = a, _2 = x })
                          )
                      →   { map =
                                λ ( a
                                  : object
                                  )
                              → λ(b : object)
                              → λ(fn : arrow { _1 = a, _2 = b })
                              → λ ( nu
                                  : ./Type sha256:36afe8766fa6f825c8c88f46bff2210c6fb4b495d5c961d28b91452680bd5bc5
                                    (λ(r : Type) → f { _1 = a, _2 = r })
                                  )
                              → λ(r : Type)
                              → λ ( unfold
                                  :   ∀(z : Type)
                                    → { coalgebra :
                                          z → f { _1 = b, _2 = z }
                                      , seed :
                                          z
                                      }
                                    → r
                                  )
                              → nu
                                r
                                (   λ(y : Type)
                                  → λ ( nub
                                      : { coalgebra :
                                            y → f { _1 = a, _2 = y }
                                        , seed :
                                            y
                                        }
                                      )
                                  → unfold
                                    y
                                    { coalgebra =
                                        Set/category.op
                                        { _1 = y, _2 = f { _1 = b, _2 = y } }
                                        (   λ(r : Type)
                                          → λ ( arrowsOut
                                              :   ∀(z : Type)
                                                → (z → f { _1 = b, _2 = y })
                                                → (y → z)
                                                → r
                                              )
                                          → arrowsOut
                                            (f { _1 = a, _2 = y })
                                            ((functor y).map a b fn)
                                            nub.coalgebra
                                        )
                                    , seed =
                                        nub.seed
                                    }
                                )
                          }
                        : Functor
                          (   λ ( a
                                : object
                                )
                            → ./Type sha256:36afe8766fa6f825c8c88f46bff2210c6fb4b495d5c961d28b91452680bd5bc5
                              (λ(r : Type) → f { _1 = a, _2 = r })
                          )
