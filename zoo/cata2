{- This variant of `cata` takes two structures (only the first of which must be
  `Recursive`) and folds over them simultaneously, much like a recursive
  `Applicative.op`.
-}
let kArrow =
      https://raw.githubusercontent.com/sellout/caterwaul/9e79829d7659a9e4f039e59114541489331c9737/Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let object = Type

let cat =
      https://raw.githubusercontent.com/sellout/caterwaul/9e79829d7659a9e4f039e59114541489331c9737/Category/Set/monoidal/cartesian sha256:b3c97e385d62b718ab11e540a98141cb81b89db0d7c1115ec11b330c596dcf01

let semigroupoid =
      https://raw.githubusercontent.com/sellout/caterwaul/9e79829d7659a9e4f039e59114541489331c9737/Function/semigroupoid sha256:4827035ecdee301574a57c0dde786653eaf4724f0fb0d175a99128759e973c07

let Day =
      https://raw.githubusercontent.com/sellout/caterwaul/9e79829d7659a9e4f039e59114541489331c9737/Day/Type sha256:681b4b22f4cd4484c75a93d75c4c4a58c7d7b146d8f9e1a52602b49a8fb51f87
      object
      cat
      cat

in    λ ( t
        : object
        )
    → λ(f : kArrow object object)
    → λ ( recursive
        : ./../Recursive/Type sha256:64e298030b917c0190a219faa415de12632b0d3b2d7660187225637caa22c0ed
          object
          cat.arrow
          t
          f
        )
    → λ(u : object)
    → λ(g : kArrow object object)
    → λ ( steppable
        : ./../Steppable/Type sha256:7cda69d1654ef3854e389c2674a997b6a6cec8bb95d873df2d528f7510f2becb
          object
          cat.arrow
          u
          g
        )
    → λ(a : object)
    → semigroupoid.op
      { _1 =
          cat.arrow { _1 = Day { _1 = f, _2 = g } a, _2 = a }
      , _2 =
          cat.arrow { _1 = t, _2 = cat.arrow { _1 = u, _2 = a } }
      }
      (   λ ( r
            : Type
            )
        → λ ( arrowsOut
            :   ∀(z : object)
              → (z → cat.arrow { _1 = t, _2 = cat.arrow { _1 = u, _2 = a } })
              → (cat.arrow { _1 = Day { _1 = f, _2 = g } a, _2 = a } → z)
              → r
            )
        → arrowsOut
          ( cat.arrow
            { _1 =
                f (cat.arrow { _1 = u, _2 = a })
            , _2 =
                cat.arrow { _1 = u, _2 = a }
            }
          )
          (recursive.cata (cat.arrow { _1 = u, _2 = a }))
          ( ./../lowerDay sha256:566e9780b66a8534cae4615d68ef00597d48b1294a4958c457b137b8dc333874
            f
            u
            g
            steppable
            a
          )
      )
