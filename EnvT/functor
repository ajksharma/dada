    let Functor = ./../../dhall-bhat/Functor/Endo/Set

in    λ(a : Type)
    → λ(f : Type → Type)
    → λ(functor : Functor f)
    →   { map =
              λ(b : Type)
            → λ(c : Type)
            → λ(g : b → c)
            → λ(q : ./type a f b)
            → q ⫽ { lower = functor.map b c g q.lower }
        }
      : Functor (./type a f)
